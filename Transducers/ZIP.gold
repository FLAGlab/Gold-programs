// -----------------------
// Silvia Takahashi
// UNIVERSIDAD DE LOS ANDES
//------------------------------
// 
//  Two automata:
//
//  An automaton that reads a string of the form  w$ , w in A*	
//  Produces a string where sequential substrings of length 2‥5 of the same symbol are
//  replaced the the repeating symbol followed by the number of repeats
//    
//    An Automaton that decodes the strings  coded by the first automaton
//    
//-----------------------
//   By default  A = ('a' ‥ 'e'), it can be changed invoking the program with a string  of symbols. 
//   A  will contain all the the symbols in the string
//  
using gold.**

var A

procedure main(args:String[]) begin
	
	if  args.length=0  then  A:= ('a'‥'c')
	else	
		A := {args[0].charAt(i) |  0 ≤ i < args[0].length()}\{'$'}
    end
	
	
	coder:=createCoder()
    decoder:=createDecoder()
    // GAutomataFrame.show(decoder)
   Utilities.testCodeDecode(coder,decoder)
end

 
 
function createCoder():ITransducer begin
	Q:= {⟨letter,count⟩| letter ∈ A,1≤count≤5}∪{"I","F"}
	Σ:=A∪{'$'}
	Σ´:=A∪('2'‥'5')∪{'$'}
	q₀:="I"
	F:={"F"}
	return 	GDeterministicTransducer(Q,Σ,Σ´,q₀,F,δ,g,h)
end

function δ(q,σ) begin
	if q="F" then
		return "F"
	elseif σ='$' then
			return "F"
		else
			return ⟨σ,1⟩ 
		end
	end

function δ(⟨s,c⟩,a) begin
	if a='$' then
		 return "F"
	elseif (a=s) and (c < 5)then
			return ⟨a,c+1⟩ 
	else		
			return ⟨a,1⟩ 
	end
end


function g(q) begin
	return λ
end

function h(q,σ) begin
	 if q ="I"  and  σ='$'then return σ

   else return λ
	
end
end

function h(⟨s,c⟩,a) begin
	
	if a = '$' and c = 1 then 
		 return s +"$"
	elseif  a = '$' then
		 return String.valueOf(s)+String.valueOf(c)+"$" 
	elseif (a=s) and (c < 5)then
			return λ 
	elseif c = 1 then		
			return s
	else return String.valueOf(s)+String.valueOf(c)	
end 

end

function createDecoder():ITransducer begin
	Q:= {"I","F","E"}∪A∪ (A×{1})
	Σ:=A∪('2'‥'5')∪{'$'}
	Σ´:=A∪{'$'}
	q₀:="I"
	F:={"F"}
	return 	GDeterministicTransducer(Q,Σ,Σ´,q₀,F,δ1,g,h1)
end

function δ1(q,s) begin
	if q in {"E","F"}  then return "E"
	elseif s='$' then return  "F" 
	elseif q="I" and s in ('2'‥'5') then return "E"
	elseif q="I" then return s
		
	elseif q in A and s in ('2'‥'4')  then return ⟨q,1⟩
	elseif q in A and s = '5'  then return "I"
	elseif q in A and s = q  then return "E"
   else return s
	end
end

function δ1(⟨q,x⟩,s) begin
	if s='$' then return  "F" 
	elseif s in ('2'‥'5') then return "E"
	elseif s = q then return "E"
    else return s
	end
end



function h1(q,s) begin
	if q="F" or  q="E" then return  ""		
	elseif s='$' and  q in A then return q+"$" 
	elseif s='$' then return "$"
	elseif s in A∪{'$'} and q in A then return q
   elseif  s in ('2'‥'5') and q in A then return starN(q,(s-'0'))
   	else return ""
	end
end



function starN(c,n) begin
  if n = 0  then return λ
  else  return String.valueOf(c)+starN(c,n-1)
  end
end